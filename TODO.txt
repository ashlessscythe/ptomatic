# Project: pto-matic - Incremental Build Steps with Tollgate Deployments

## Setup (Tollgate 1 - Initial Setup & Basic Authentication) ✅
- [x] Set up repository (`pto-matic`) and initialize with Next.js and Prisma.
- [x] Install dependencies for Next.js, ShadCN UI, and Prisma.
- [x] Configure environment variables (refer to `env.example`).
- [x] Configure Prisma models for basic tables (`User`, `Department`, `PTORequest`) and run initial migration.
- [x] Deploy the initial version to verify environment configuration and basic auth functionality.

## User & Admin Workflows (Tollgate 2 - User Onboarding and Basic PTO Requests) ✅
- [x] Develop User Registration flow:
   - [x] Direct new users to the pending page after SSO login.
   - [x] Add logic for admins to review new users and assign them to managers, departments, and PTO balances.
- [x] Build User Dashboard with:
   - [x] PTO request submission form.
   - [x] Display pending, approved, and denied requests.
- [x] Implement the Admin Panel basics:
   - [x] User management (approve/deny pending users).
   - [x] PTO request review and status updates.
- [x] Set up email notifications with Resend and add templates for notifications.
- [x] Deploy for testing and gather feedback on the user and admin workflows.

## Manager & Approver Roles (Tollgate 3 - Role-Based Access & Manager Approvals) ✅
- [x] Add role-based access to the app (User, Admin, Manager, Approver).
- [x] Update database schema to include relationships:
   - [x] **Managers to Users** (one-to-many)
   - [x] **Approvers to Departments** (many-to-one)
   - [x] **Users to Departments** (many-to-one)
- [x] Implement role-based navigation:
   - [x] Header links for different user roles (Admin, Manager, Approver, User)
   - [x] Role-specific landing pages and redirects
   - [x] Improved user management with modal-based user creation
- [x] Develop Manager Dashboard:
   - [x] Managers can view PTO requests and balances for their team
   - [x] Admin access to view all teams' requests and balances
   - [x] Team PTO usage tracking and low balance warnings
- [x] Build Department Approver functionality:
   - [x] Approvers handle PTO requests within their department only
   - [x] Admin access to view all departments' requests
   - [x] Department-wide PTO statistics and request tracking
- [x] Deploy and test functionality with managers and department approvers.

## Notifications & Reporting (Tollgate 4 - Notifications, Resend Feature & Reporting)
- [ ] Implement notification system:
   - [ ] In-app notifications for real-time updates.
   - [ ] Email notifications for key actions (e.g., request submission, status updates).
   - [ ] (Resend) option for emails in the Admin Panel.
- [ ] Build basic reporting and insights:
   - [ ] PTO usage trends, requests by department, and balance adjustments.
   - [ ] Exportable reports for admin use.
- [ ] Deploy for testing notifications and reporting functions.

## Migration & Final Testing (Tollgate 5 - Data Migration & Final Refinements)
- [ ] Implement data migration script:
   - [ ] Map and import existing user and PTO data from the old app.
- [ ] Conduct final data checks to ensure accuracy post-migration.
- [ ] Perform end-to-end testing for all workflows, roles, and notifications.
- [ ] Deploy to staging for final testing and feedback.

## Final Deployment (Tollgate 6 - Production-Ready Release)
- [ ] Set up production deployment.
- [ ] Prepare and review documentation (Markdown files for workflow, tech stack, features, design, and more).
- [ ] Launch `pto-matic` in production.

# Post-Deployment
- [ ] Monitor and resolve any post-deployment issues.
- [ ] Continue iterating based on user feedback.
